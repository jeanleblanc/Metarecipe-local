{"ast":null,"code":"var _jsxFileName = \"/Users/jeanaboutboul/Desktop/Metarecipe-local/src/components/RadaerByData.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Radar, defaults } from \"react-chartjs-2\";\ndefaults.global.defaultFontFamily = \"'Baloo Tamma 2'\";\ndefaults.global.defaultFontColor = '#2f1544';\ndefaults.global.defaultFontStyle = 'bold'; // defaults.global.defaultFontStyle =  '20'\n\nexport default function RadarByData(props) {\n  const [chartData, setChartData] = useState({}); // to do make sure about order\n  // const colors = ['#f2b705'];\n\n  useEffect(() => {\n    const chart = () => {\n      let datasets = []; // let aromaLabel = aroma.entity_alias_readable;\n      // pick color\n\n      let data_color = '#f2b705'; // save data set\n\n      datasets = [{\n        // label: \"dd\",\n        backgroundColor: \"rgba(0,0,0,0)\",\n        borderColor: data_color,\n        borderWidth: 2,\n        data: Object.values(props.data),\n        pointRadius: 1.5\n      }];\n      setChartData({\n        labels: Object.keys(props.data),\n        datasets: datasets\n      });\n    };\n\n    chart();\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Radar, {\n    data: chartData,\n    width: 100,\n    height: 100,\n    color: \"green\",\n    options: {\n      responsive: true,\n      aspectRatio: 1,\n      title: {\n        text: props.title,\n        display: false\n      },\n      legend: {\n        display: false\n      },\n      scale: {\n        gridLines: {\n          color: '#2f1544',\n          lineWidth: 0.5\n        },\n        angleLines: {\n          color: '#2f1544',\n          lineWidth: 0.5\n        },\n        ticks: {\n          min: 0,\n          suggestedMax: props.suggestedMax\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/Users/jeanaboutboul/Desktop/Metarecipe-local/src/components/RadaerByData.js"],"names":["React","useState","useEffect","Radar","defaults","global","defaultFontFamily","defaultFontColor","defaultFontStyle","RadarByData","props","chartData","setChartData","chart","datasets","data_color","backgroundColor","borderColor","borderWidth","data","Object","values","pointRadius","labels","keys","responsive","aspectRatio","title","text","display","legend","scale","gridLines","color","lineWidth","angleLines","ticks","min","suggestedMax"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,iBAAhC;AAIAA,QAAQ,CAACC,MAAT,CAAgBC,iBAAhB,GAAoC,iBAApC;AACAF,QAAQ,CAACC,MAAT,CAAgBE,gBAAhB,GAAmC,SAAnC;AACAH,QAAQ,CAACC,MAAT,CAAgBG,gBAAhB,GAAmC,MAAnC,C,CACA;;AAIA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CAFuC,CAKvC;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,KAAK,GAAG,MAAM;AAGhB,UAAIC,QAAQ,GAAG,EAAf,CAHgB,CAIhB;AACA;;AACA,UAAIC,UAAU,GAAG,SAAjB,CANgB,CAShB;;AACAD,MAAAA,QAAQ,GAAG,CAAC;AACR;AACAE,QAAAA,eAAe,EAAE,eAFT;AAGRC,QAAAA,WAAW,EAAEF,UAHL;AAIRG,QAAAA,WAAW,EAAE,CAJL;AAKRC,QAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAcX,KAAK,CAACS,IAApB,CALE;AAMRG,QAAAA,WAAW,EAAE;AANL,OAAD,CAAX;AAYAV,MAAAA,YAAY,CAAC;AACTW,QAAAA,MAAM,EAAEH,MAAM,CAACI,IAAP,CAAYd,KAAK,CAACS,IAAlB,CADC;AAETL,QAAAA,QAAQ,EAAEA;AAFD,OAAD,CAAZ;AAIH,KA1BD;;AA6BAD,IAAAA,KAAK;AACR,GA/BQ,EA+BN,CAACH,KAAD,CA/BM,CAAT;AAiCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEC,SADV;AAEI,IAAA,KAAK,EAAE,GAFX;AAGI,IAAA,MAAM,EAAE,GAHZ;AAII,IAAA,KAAK,EAAC,OAJV;AAKI,IAAA,OAAO,EAAE;AACLc,MAAAA,UAAU,EAAE,IADP;AAELC,MAAAA,WAAW,EAAE,CAFR;AAILC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAElB,KAAK,CAACiB,KAAd;AAAqBE,QAAAA,OAAO,EAAE;AAA9B,OAJF;AAKLC,MAAAA,MAAM,EAAE;AACJD,QAAAA,OAAO,EAAE;AADL,OALH;AAQLE,MAAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE,SADA;AAEPC,UAAAA,SAAS,EAAE;AAFJ,SADR;AAKHC,QAAAA,UAAU,EAAE;AACRF,UAAAA,KAAK,EAAE,SADC;AAERC,UAAAA,SAAS,EAAE;AAFH,SALT;AAUHE,QAAAA,KAAK,EAAE;AACHC,UAAAA,GAAG,EAAE,CADF;AAEHC,UAAAA,YAAY,EAAE5B,KAAK,CAAC4B;AAFjB;AAVJ;AARF,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAkCH;AAAA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Radar, defaults } from \"react-chartjs-2\";\n\n\n\ndefaults.global.defaultFontFamily = \"'Baloo Tamma 2'\";\ndefaults.global.defaultFontColor = '#2f1544'\ndefaults.global.defaultFontStyle = 'bold'\n// defaults.global.defaultFontStyle =  '20'\n\n\n\nexport default function RadarByData(props) {\n\n    const [chartData, setChartData] = useState({});\n\n\n    // to do make sure about order\n    // const colors = ['#f2b705'];\n\n    useEffect(() => {\n        const chart = () => {\n\n\n            let datasets = [];\n            // let aromaLabel = aroma.entity_alias_readable;\n            // pick color\n            let data_color = '#f2b705';\n\n\n            // save data set\n            datasets = [{\n                // label: \"dd\",\n                backgroundColor: \"rgba(0,0,0,0)\",\n                borderColor: data_color,\n                borderWidth: 2,\n                data: Object.values(props.data),\n                pointRadius: 1.5\n\n            }];\n\n\n\n            setChartData({\n                labels: Object.keys(props.data),\n                datasets: datasets\n            });\n        }\n\n\n        chart();\n    }, [props]);\n\n    return (\n        <div>\n            <Radar\n                data={chartData}\n                width={100}\n                height={100}\n                color='green'\n                options={{\n                    responsive: true,\n                    aspectRatio: 1,\n\n                    title: { text: props.title, display: false },\n                    legend: {\n                        display: false,\n                    },\n                    scale: {\n                        gridLines: {\n                            color: '#2f1544',\n                            lineWidth: 0.5\n                        },\n                        angleLines: {\n                            color: '#2f1544',\n                            lineWidth: 0.5\n\n                        },\n                        ticks: {\n                            min: 0,\n                            suggestedMax: props.suggestedMax\n                        }\n                    }\n                }}\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jeanaboutboul/Desktop/Metarecipe-local/src/components/Control.js\";\nimport React, { useState, useEffect } from \"react\";\nimport RadarChart from '../components/RadaerByData.js';\nimport LineChart from './LineChart.js';\nimport AmountSlider from '../components/AmountsSlider.js';\nimport ServiceApi from \"../services/ServiceApi.js\";\nimport { Collapse, Card, Spinner } from 'react-bootstrap';\nimport { std } from 'mathjs'; // ------- functions ------------------\n\nimport * as helper from './functions/control-functions'; // ------- icons ----------------------\n\nimport { RiArrowDropDownLine, RiArrowDropUpLine } from 'react-icons/ri'; // ------- constants ------------------\n\nconst DIGIT_AFTER_POINT = 100;\nconst WATER_FACTOR = 0.1;\nexport default function Control(props) {\n  const pickedDiet = helper.customDietName(props.diet);\n  const [pickedRecipe, setPickedRecipe] = useState(props.recipe);\n  const [ingredients, setIngredients] = useState([]);\n  const [originalIngredients, setOriginalIngredients] = useState([]);\n  const [aromas, setAromas] = useState();\n  const [tastes, setTastes] = useState();\n  const [openDic, setOpenDic] = useState({});\n  const [sustainableScore, setSustainableScore] = useState(0);\n  const [aromaScore, setAromaScore] = useState(0);\n  const [tasteScore, setTasteScore] = useState(0);\n  const [showZeros, setShowZeros] = useState(false);\n  const [metaRecipe, setMetaRecipe] = useState();\n  const [envImpactAvgMetaReicpe, setEnvImpactAvgMetaReicpe] = useState();\n  const [envImpact, setEnvImpact] = useState();\n\n  const getRecipe = () => {\n    ServiceApi.retrieveRecipe(pickedRecipe.id).then(data => {\n      setMetaRecipe(data);\n      setEnvImpactAvgMetaReicpe(data.env_impact_avg);\n      setPickedRecipe(data); // find the choosed recipe\n\n      for (const recipe of data.recipes) {\n        if (recipe.diet === pickedDiet) {\n          setIngredients(helper.cateogryReduce(recipe.ingredients));\n          setOriginalIngredients(recipe.ingredients);\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getRecipe();\n    getCategoryTitles();\n  }, []);\n  /**\n   * For each ingredient the function calculate the aroma intesity by catogory (Mint, Woddy , etc.) and the avarage between \n   * all the recipe ingredient . It's build a dictionary with the final catogry avg value for the the Aroma intesity chart\n   * And finally it's compute the one number score by standard deviation for Aroma score\n   */\n\n  const calculateAromasAvarge = () => {\n    let size = Object.keys(ingredients).length;\n\n    if (size > 0) {\n      const aromasAvg = {};\n      const flatIngs = Object.values(ingredients).flat();\n      const avgFactor = 1 / flatIngs.length;\n      flatIngs.forEach(ing => {\n        // if (ing.value > 0) {  // ing == 0 <=> zero the equation\n        let factor = helper.noramlizeValue(ing.value, ing.min, ing.max); // filter out none arome data:\n\n        let {\n          entity_id,\n          entity_alias_readable,\n          ...aromaVals\n        } = ing.aromas; // analyze avg data\n\n        for (const [key, val] of Object.entries(aromaVals)) {\n          if (key in aromasAvg) {\n            aromasAvg[key] += helper.computeAromaScore(val, factor) * avgFactor;\n          } else {\n            aromasAvg[key] = helper.computeAromaScore(val, factor) * avgFactor;\n          }\n        } // }\n\n      });\n      helper.roundDict(aromasAvg);\n      setAromaScore(helper.roundNumber(std(Object.values(aromasAvg), 'uncorrected')));\n      setAromas(aromasAvg);\n    }\n  };\n  /**\n  * For each ingredient the function calculate the Taste intesity by catogory (Salty, Sour, etc.) and the avarage between \n  * all the recipe ingredient . It's build a dictionary with the final catogry avg value for the the Taste intesity chart\n  * And finally it's compute the one number score by standard deviation for Taste score\n  */\n\n\n  const calculateTasteAvarge = () => {\n    let size = Object.keys(ingredients).length;\n\n    if (size > 0) {\n      const tasteAvg = {};\n      const flatIngs = Object.values(ingredients).flat();\n      const avgFactor = 1 / flatIngs.length;\n      flatIngs.forEach(ing => {\n        // if (ing.value > 0) { // ing == 0 <=> zero the equation\n        let factor = helper.noramlizeValue(ing.value, ing.min, ing.max); // filter out none arome data:\n\n        let {\n          entity_id,\n          taste_name,\n          ...tasteVals\n        } = ing.tastes; // analyze avg data\n\n        for (const [key, val] of Object.entries(tasteVals)) {\n          if (key in tasteAvg) {\n            tasteAvg[key] += helper.computeTasteScore(val / 10, factor) * avgFactor;\n          } else {\n            tasteAvg[key] = helper.computeTasteScore(val / 10, factor) * avgFactor;\n          }\n        } // }\n\n      });\n      helper.roundDict(tasteAvg);\n      setTasteScore(helper.roundNumber(std(Object.values(tasteAvg), 'uncorrected')));\n      setTastes(tasteAvg);\n    }\n  };\n  /**\n   * For each ingredient the function calculate the Environmental Impact by catogory (land_use, ghg , etc.) and the avarage between \n   * all the recipe ingredient . It's build a dictionary with the final catogry avg value for the  Environmental Impact chart\n   */\n\n\n  const calculateEnvImpact = () => {\n    if (envImpactAvgMetaReicpe) {\n      // init dict for new Environmental Impact score\n      const newEnvImpact = {\n        \"land_use\": 0,\n        \"ghg\": 0,\n        \"acid\": 0,\n        \"eutrophy\": 0,\n        \"freshwater\": 0\n      };\n      const flatIngs = Object.values(ingredients).flat(); // culclate by new value\n\n      flatIngs.forEach(ing => {\n        // if (ing.value > 0) {\n        let factor = helper.noramlizeValue(ing.value, ing.min, ing.max);\n        let envImpactData = ing.env_impact;\n        newEnvImpact['land_use'] += helper.computeEnvImpactScore(envImpactData.land_use, factor, ing.unit_convertor_g);\n        newEnvImpact['ghg'] += helper.computeEnvImpactScore(envImpactData.ghg_emissions, factor, ing.unit_convertor_g);\n        newEnvImpact['acid'] += helper.computeEnvImpactScore(envImpactData.acidifying_emissions, factor, ing.unit_convertor_g);\n        newEnvImpact['eutrophy'] += helper.computeEnvImpactScore(envImpactData.eutrophying_emissions, factor, ing.unit_convertor_g);\n        newEnvImpact['freshwater'] += helper.computeEnvImpactScore(envImpactData.freshwater_withdrawals, factor, ing.unit_convertor_g) * WATER_FACTOR; // }\n      }); // round values:\n\n      helper.roundDict(newEnvImpact); // send the result\n\n      setEnvImpact(newEnvImpact);\n    }\n  };\n  /**\n   *  build a hepler object (dict) with the ingredint's category title, for Show/Hide zere btn\n   */\n\n\n  const getCategoryTitles = () => {\n    let categoryDic = {};\n\n    if (ingredients.length !== 0) {\n      for (const categoryTitle of Object.keys(ingredients)) {\n        categoryDic[categoryTitle] = false;\n      }\n\n      setOpenDic(categoryDic);\n    }\n  };\n  /**\n   * It's compute the one number scorre for Sustiable score by avg of gap between metercipe and dish footprint values\n   */\n\n\n  const calculateSustainbleScore = () => {\n    if (envImpactAvgMetaReicpe && envImpact) {\n      let sum = 0;\n\n      for (const key of Object.keys(envImpact)) {\n        sum += (envImpact[key] - envImpactAvgMetaReicpe[key]) * 0.2;\n      }\n\n      setSustainableScore(Math.round(sum * DIGIT_AFTER_POINT) / DIGIT_AFTER_POINT);\n    }\n  };\n\n  useEffect(() => {\n    calculateAromasAvarge();\n    calculateTasteAvarge();\n    calculateEnvImpact();\n  }, [ingredients, metaRecipe, envImpactAvgMetaReicpe]);\n  useEffect(() => {\n    calculateSustainbleScore();\n  }, [envImpactAvgMetaReicpe, envImpact]);\n  useEffect(() => {\n    getCategoryTitles();\n  }, []);\n  /**\n   *  update the new value for the ingredient by user request\n   * @param {float} val = number in [0,1]\n   * @param {int} id = id of ingredient in recipe\n   * @param {string} cat = category name\n   */\n\n  const handleIngValChange = (val, id, cat) => {\n    let c = ingredients[cat].map(ing => {\n      return ing.id === id ? { ...ing,\n        value: val\n      } : ing;\n    });\n    setIngredients({ ...ingredients,\n      [cat]: c\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, aromas && envImpact && envImpactAvgMetaReicpe && tastes && ingredients ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row  justify-content-start mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setIngredients(helper.cateogryReduce(originalIngredients)),\n    className: \"mr-1 ml-3 my-1 pt-1 px-3 control-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-1 my-1 pt-1 px-3 control-btn\",\n    onClick: () => setShowZeros(!showZeros),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 33\n    }\n  }, showZeros ? 'Hide ' : 'Show ', \"Zeros\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    style: {\n      height: '62vh',\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mx-0 mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1 px-0 font-weight-bold  align-self-strech side-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 37\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-11 mx-0 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 37\n    }\n  }, ingredients && Object.entries(ingredients).map(([cat, val]) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: cat,\n      className: \"border-left  rounded-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \" list-group-item d-flex border-left-0 rounded-right align-items-center justify-content-between text-capitalize \",\n      style: {\n        border: \"1px solid var(--secondary)\",\n        backgroundColor: \"var(--light)\"\n      },\n      onClick: () => setOpenDic(openDic => ({ ...openDic,\n        [cat]: !openDic[cat]\n      })),\n      \"aria-controls\": cat,\n      \"aria-expanded\": openDic[cat],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: helper.matchImg(cat),\n      alt: \"logo\",\n      style: {\n        height: '10%',\n        width: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mx-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 65\n      }\n    }, cat)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 61\n      }\n    }, openDic[cat] ? /*#__PURE__*/React.createElement(RiArrowDropUpLine, {\n      className: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 81\n      }\n    }) : /*#__PURE__*/React.createElement(RiArrowDropDownLine, {\n      className: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 120\n      }\n    }))), /*#__PURE__*/React.createElement(Collapse, {\n      in: openDic[cat],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: cat,\n      className: \"list-group list-group-flush rounded-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 61\n      }\n    }, val.map(ing => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item  justify-content-between rounded-right align-items-center text-capitalize  px-0\" + (showZeros || ing.value > 0 ? \"d-flex\" : \" d-none\"),\n      key: ing.id,\n      style: {\n        borderBottom: \"1px solid var(--secondary)\",\n        borderRight: \"1px solid var(--secondary)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row px-0 mx-0 justify-content-between  align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 px-0 mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 81\n      }\n    }, ing.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6 px-0 mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row px-0 mx-0 justify-content-end  align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 85\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col px-0 mx-0   align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 93\n      }\n    }, /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 97\n      }\n    }, helper.noramlizeValue(ing.value, ing.min, ing.max)), ing.unit === \"g\" ? \"gr\" : ing.unit)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col justify-content-end px-0 mx-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(AmountSlider, {\n      ingredient: ing,\n      val: ing.value,\n      onChange: val => handleIngValChange(val, ing.id, cat),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 93\n      }\n    }))))))))));\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" font-weight-bold my-2  text-center text-break align-self-strech my-title\",\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 41\n    }\n  }, \"Aroma\", '\\u00A0', \"Intensity\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" mx-0 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(RadarChart, {\n    data: aromas,\n    title: \"Aroma Intensity\",\n    suggestedMax: metaRecipe.aroma_max * 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12  text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"\",\n    src: helper.aromaIndication(aromaScore),\n    style: {\n      height: \"13vh\",\n      width: \"13vh\"\n    },\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"d-flex font-weight-bold px-2 my-1  my-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 49\n    }\n  }, \"Aroma: \", aromaScore)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" font-weight-bold my-2  text-center  align-self-strech my-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 41\n    }\n  }, \"Taste\", '\\u00A0', \"Intensity\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" mx-0 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(RadarChart, {\n    data: tastes,\n    title: \"Taste Intensity\",\n    suggestedMax: metaRecipe.taste_max * 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12  text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"\",\n    src: helper.tasteIndication(tasteScore),\n    style: {\n      height: \"13vh\",\n      width: \"13vh\"\n    },\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"d-flex font-weight-bold px-2 my-1 my-title \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 49\n    }\n  }, \"Taste: \", tasteScore)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-5 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" font-weight-bold my-2  text-center text-break align-self-strech my-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 41\n    }\n  }, \"Environmental Impact\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" mx-0 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    dynamicEnvImpact: envImpact,\n    envImpactAvg: envImpactAvgMetaReicpe,\n    suggestedMax: metaRecipe.env_impact_max * 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12  align-self-end text-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"\",\n    src: helper.sustaibleIndication(sustainableScore),\n    style: {\n      height: \"17vh\",\n      width: \"12.5vh\"\n    },\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"d-flex font-weight-bold px-2 my-1 my-title \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 49\n    }\n  }, \"Sustaible: \", sustainableScore))))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 25\n    }\n  }, \"Loading...\"))));\n}\n;","map":{"version":3,"sources":["/Users/jeanaboutboul/Desktop/Metarecipe-local/src/components/Control.js"],"names":["React","useState","useEffect","RadarChart","LineChart","AmountSlider","ServiceApi","Collapse","Card","Spinner","std","helper","RiArrowDropDownLine","RiArrowDropUpLine","DIGIT_AFTER_POINT","WATER_FACTOR","Control","props","pickedDiet","customDietName","diet","pickedRecipe","setPickedRecipe","recipe","ingredients","setIngredients","originalIngredients","setOriginalIngredients","aromas","setAromas","tastes","setTastes","openDic","setOpenDic","sustainableScore","setSustainableScore","aromaScore","setAromaScore","tasteScore","setTasteScore","showZeros","setShowZeros","metaRecipe","setMetaRecipe","envImpactAvgMetaReicpe","setEnvImpactAvgMetaReicpe","envImpact","setEnvImpact","getRecipe","retrieveRecipe","id","then","data","env_impact_avg","recipes","cateogryReduce","catch","err","console","log","getCategoryTitles","calculateAromasAvarge","size","Object","keys","length","aromasAvg","flatIngs","values","flat","avgFactor","forEach","ing","factor","noramlizeValue","value","min","max","entity_id","entity_alias_readable","aromaVals","key","val","entries","computeAromaScore","roundDict","roundNumber","calculateTasteAvarge","tasteAvg","taste_name","tasteVals","computeTasteScore","calculateEnvImpact","newEnvImpact","envImpactData","env_impact","computeEnvImpactScore","land_use","unit_convertor_g","ghg_emissions","acidifying_emissions","eutrophying_emissions","freshwater_withdrawals","categoryDic","categoryTitle","calculateSustainbleScore","sum","Math","round","handleIngValChange","cat","c","map","height","overflowY","overflowX","border","backgroundColor","matchImg","width","borderBottom","borderRight","name","float","unit","aroma_max","aromaIndication","taste_max","tasteIndication","env_impact_max","sustaibleIndication"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RadarChart from '../components/RadaerByData.js'\nimport LineChart from './LineChart.js'\nimport AmountSlider from '../components/AmountsSlider.js'\nimport ServiceApi from \"../services/ServiceApi.js\";\nimport { Collapse, Card, Spinner } from 'react-bootstrap';\nimport { std } from 'mathjs';\n\n// ------- functions ------------------\nimport * as helper from './functions/control-functions'\n\n// ------- icons ----------------------\nimport { RiArrowDropDownLine, RiArrowDropUpLine } from 'react-icons/ri'\n\n// ------- constants ------------------\nconst DIGIT_AFTER_POINT = 100\nconst WATER_FACTOR = 0.1\n\n\nexport default function Control(props) {\n    const pickedDiet = helper.customDietName(props.diet)\n    const [pickedRecipe, setPickedRecipe] = useState(props.recipe);\n    const [ingredients, setIngredients] = useState([]);\n    const [originalIngredients, setOriginalIngredients] = useState([]);\n    const [aromas, setAromas] = useState();\n    const [tastes, setTastes] = useState();\n    const [openDic, setOpenDic] = useState({});\n    const [sustainableScore, setSustainableScore] = useState(0)\n    const [aromaScore, setAromaScore] = useState(0)\n    const [tasteScore, setTasteScore] = useState(0)\n    const [showZeros, setShowZeros] = useState(false);\n    const [metaRecipe, setMetaRecipe] = useState()\n    const [envImpactAvgMetaReicpe, setEnvImpactAvgMetaReicpe] = useState()\n    const [envImpact, setEnvImpact] = useState()\n\n    const getRecipe = () => {\n        ServiceApi.retrieveRecipe(pickedRecipe.id).then(data => {\n            setMetaRecipe(data)\n            setEnvImpactAvgMetaReicpe(data.env_impact_avg)\n            setPickedRecipe(data);\n\n            // find the choosed recipe\n            for (const recipe of data.recipes) {\n                if (recipe.diet === pickedDiet) {\n                    setIngredients(helper.cateogryReduce(recipe.ingredients));\n                    setOriginalIngredients(recipe.ingredients);\n\n\n                }\n            }\n        })\n            .catch(err => {\n                console.log(err);\n            });\n\n    };\n\n\n    useEffect(() => {\n        getRecipe();\n        getCategoryTitles();\n\n    }, []);\n\n\n    /**\n     * For each ingredient the function calculate the aroma intesity by catogory (Mint, Woddy , etc.) and the avarage between \n     * all the recipe ingredient . It's build a dictionary with the final catogry avg value for the the Aroma intesity chart\n     * And finally it's compute the one number score by standard deviation for Aroma score\n     */\n    const calculateAromasAvarge = () => {\n        let size = Object.keys(ingredients).length;\n        \n        if (size > 0) {\n\n            const aromasAvg = {};\n            const flatIngs = Object.values(ingredients).flat()\n            const avgFactor = 1 / flatIngs.length;\n\n            flatIngs.forEach(ing => {\n                // if (ing.value > 0) {  // ing == 0 <=> zero the equation\n                    let factor = helper.noramlizeValue(ing.value, ing.min, ing.max);\n\n                    // filter out none arome data:\n                    let { entity_id, entity_alias_readable, ...aromaVals } = ing.aromas;\n\n                    // analyze avg data\n                    for (const [key, val] of Object.entries(aromaVals)) {\n                        if (key in aromasAvg) {\n                            aromasAvg[key] += helper.computeAromaScore(val, factor) * avgFactor;\n                        } else {\n                            aromasAvg[key] = helper.computeAromaScore(val, factor) * avgFactor;\n                        }\n                    }\n                // }\n            });\n\n            helper.roundDict(aromasAvg);\n            setAromaScore(helper.roundNumber(std(Object.values(aromasAvg), 'uncorrected')));\n            setAromas(aromasAvg);\n        }\n    };\n\n\n    /**\n    * For each ingredient the function calculate the Taste intesity by catogory (Salty, Sour, etc.) and the avarage between \n    * all the recipe ingredient . It's build a dictionary with the final catogry avg value for the the Taste intesity chart\n    * And finally it's compute the one number score by standard deviation for Taste score\n    */\n    const calculateTasteAvarge = () => {\n        let size = Object.keys(ingredients).length;\n        if (size > 0) {\n\n            const tasteAvg = {};\n            const flatIngs = Object.values(ingredients).flat()\n            const avgFactor = 1 / flatIngs.length;\n\n            flatIngs.forEach(ing => {\n                // if (ing.value > 0) { // ing == 0 <=> zero the equation\n                    let factor = helper.noramlizeValue(ing.value, ing.min, ing.max);\n\n                    // filter out none arome data:\n                    let { entity_id, taste_name, ...tasteVals } = ing.tastes;\n\n                    // analyze avg data\n                    for (const [key, val] of Object.entries(tasteVals)) {\n                        if (key in tasteAvg) {\n                            tasteAvg[key] += (helper.computeTasteScore(val / 10, factor) * avgFactor);\n                        } else {\n                            tasteAvg[key] = helper.computeTasteScore(val / 10, factor) * avgFactor\n                        }\n                    }\n                // }\n            });\n\n            helper.roundDict(tasteAvg);\n            setTasteScore(helper.roundNumber(std(Object.values(tasteAvg), 'uncorrected')));\n            setTastes(tasteAvg);\n        }\n    };\n\n\n\n    /**\n     * For each ingredient the function calculate the Environmental Impact by catogory (land_use, ghg , etc.) and the avarage between \n     * all the recipe ingredient . It's build a dictionary with the final catogry avg value for the  Environmental Impact chart\n     */\n    const calculateEnvImpact = () => {\n        if (envImpactAvgMetaReicpe) {\n\n\n            // init dict for new Environmental Impact score\n            const newEnvImpact = {\n                \"land_use\": 0,\n                \"ghg\": 0,\n                \"acid\": 0,\n                \"eutrophy\": 0,\n                \"freshwater\": 0,\n            }\n\n            const flatIngs = Object.values(ingredients).flat()\n            // culclate by new value\n            flatIngs.forEach(ing => {\n                // if (ing.value > 0) {\n                    let factor = helper.noramlizeValue(ing.value, ing.min, ing.max);\n                    let envImpactData = ing.env_impact;\n\n                    newEnvImpact['land_use'] += helper.computeEnvImpactScore(envImpactData.land_use, factor, ing.unit_convertor_g);\n                    newEnvImpact['ghg'] += helper.computeEnvImpactScore(envImpactData.ghg_emissions, factor, ing.unit_convertor_g);\n                    newEnvImpact['acid'] += helper.computeEnvImpactScore(envImpactData.acidifying_emissions, factor, ing.unit_convertor_g);\n                    newEnvImpact['eutrophy'] += helper.computeEnvImpactScore(envImpactData.eutrophying_emissions, factor, ing.unit_convertor_g);\n                    newEnvImpact['freshwater'] += (helper.computeEnvImpactScore(envImpactData.freshwater_withdrawals, factor, ing.unit_convertor_g) * WATER_FACTOR);\n                // }\n            });\n\n            // round values:\n            helper.roundDict(newEnvImpact)\n\n            // send the result\n            setEnvImpact(newEnvImpact)\n\n        }\n\n    };\n\n    /**\n     *  build a hepler object (dict) with the ingredint's category title, for Show/Hide zere btn\n     */\n\n    const getCategoryTitles = () => {\n        let categoryDic = {}\n\n        if (ingredients.length !== 0) {\n            for (const categoryTitle of Object.keys(ingredients)) {\n                categoryDic[categoryTitle] = false;\n            }\n            setOpenDic(categoryDic);\n\n        }\n    }\n/**\n * It's compute the one number scorre for Sustiable score by avg of gap between metercipe and dish footprint values\n */\n    const calculateSustainbleScore = () => {\n        if (envImpactAvgMetaReicpe && envImpact) {\n            let sum = 0;\n            for (const key of Object.keys(envImpact)) {\n                sum += ((envImpact[key] - envImpactAvgMetaReicpe[key]) * 0.2);\n            }\n\n            setSustainableScore(Math.round(sum * DIGIT_AFTER_POINT) / DIGIT_AFTER_POINT);\n        }\n    }\n\n\n\n    useEffect(() => {\n        calculateAromasAvarge();\n        calculateTasteAvarge();\n        calculateEnvImpact();\n    }, [ingredients, metaRecipe, envImpactAvgMetaReicpe])\n\n\n    useEffect(() => {\n        calculateSustainbleScore()\n\n    }, [envImpactAvgMetaReicpe, envImpact])\n\n\n    useEffect(() => {\n        getCategoryTitles()\n    }, []);\n\n/**\n *  update the new value for the ingredient by user request\n * @param {float} val = number in [0,1]\n * @param {int} id = id of ingredient in recipe\n * @param {string} cat = category name\n */\n    const handleIngValChange = (val, id, cat) => {\n        \n        let c = ingredients[cat].map(ing => {\n            return (\n                ing.id === id\n                    ? { ...ing, value: val }\n                    : ing\n            )\n        })\n        setIngredients({ ...ingredients, [cat]: c })\n\n    }\n\n    return (\n        <div className=\"container-fluid \">\n\n            {aromas && envImpact && envImpactAvgMetaReicpe && tastes && ingredients ?\n                <div>\n\n\n                    <div className=\"row\">\n                        <div className=\"col-lg-3 \">\n                            <div className=\"row  justify-content-start mb-2\" >\n                                <div onClick={() => setIngredients(helper.cateogryReduce(originalIngredients))}\n                                    className=\"mr-1 ml-3 my-1 pt-1 px-3 control-btn\">Reset\n                                    </div>\n                                <div className=\"mx-1 my-1 pt-1 px-3 control-btn\"\n                                    onClick={() => setShowZeros(!showZeros)}>{showZeros ? 'Hide ' : 'Show '}Zeros\n                                </div>\n                            </div>\n                            <div className=\"\" style={{ height: '62vh', overflowY: 'auto', overflowX: 'hidden' }}>\n\n                                <div className='row mx-0 mt-0'  >\n                                    <div className=\"col-1 px-0 font-weight-bold  align-self-strech side-title\">\n                                        Ingredients\n                                    </div>\n                                    <div className=\"col-11 mx-0 px-0\">\n                                        {\n                                            ingredients && Object.entries(ingredients).map(([cat, val]) => {\n                                                return (\n                                                    <Card key={cat} className=\"border-left  rounded-right\" >\n                                                        <Card.Header className=\" list-group-item d-flex border-left-0 rounded-right\n                                                    align-items-center justify-content-between text-capitalize \"\n                                                            style={{\n                                                                border: \"1px solid var(--secondary)\",\n                                                                backgroundColor: \"var(--light)\"\n                                                            }}\n                                                            onClick={() => setOpenDic(openDic => ({\n                                                                ...openDic,\n                                                                [cat]: !openDic[cat]\n                                                            }))}\n                                                            aria-controls={cat}\n                                                            aria-expanded={openDic[cat]}>\n                                                            <div>\n                                                                <img src={helper.matchImg(cat)} alt=\"logo\" style={{ height: '10%', width: '10%' }} />\n                                                                <span className='mx-3'>\n                                                                    {cat}\n                                                                </span>\n                                                            </div>\n\n                                                            <div>\n                                                                {openDic[cat] ? <RiArrowDropUpLine className=\"h4\" /> : <RiArrowDropDownLine className=\"h4\" />}\n                                                            </div>\n                                                        </Card.Header >\n                                                        <Collapse in={openDic[cat]}>\n\n                                                            <ul id={cat} className=\"list-group list-group-flush rounded-right\">\n                                                                {\n                                                                    val.map(ing =>\n                                                                        <li className={\"list-group-item  justify-content-between rounded-right align-items-center text-capitalize  px-0\"\n                                                                            + (showZeros || ing.value > 0 ? \"d-flex\" : \" d-none\")}\n                                                                            key={ing.id}\n                                                                            style={{\n                                                                                borderBottom: \"1px solid var(--secondary)\",\n                                                                                borderRight: \"1px solid var(--secondary)\",\n                                                                            }}\n                                                                        >\n                                                                            <div className=\"row px-0 mx-0 justify-content-between  align-items-center\">\n                                                                                <div className=\"col-6 px-0 mx-0\">\n                                                                                    {ing.name}\n                                                                                </div>\n                                                                                <div className=\"col-6 px-0 mx-0\">\n                                                                                    <div className=\"row px-0 mx-0 justify-content-end  align-items-center\">\n                                                                                        <div className=\"col px-0 mx-0   align-items-center\">\n                                                                                            <div style={{ float: 'right' }}>\n                                                                                                <u>{helper.noramlizeValue(ing.value, ing.min, ing.max)}</u>{ing.unit === \"g\" ? \"gr\" : ing.unit}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                        <div className=\"col justify-content-end px-0 mx-0\">\n                                                                                            <AmountSlider ingredient={ing} val={ing.value}\n                                                                                                onChange={(val) => handleIngValChange(val, ing.id, cat) }\n                                                                                            />\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </li>\n                                                                    )\n                                                                }\n                                                            </ul>\n                                                        </Collapse>\n\n\n\n                                                    </Card>\n                                                )\n                                            }\n                                            )\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-9\">\n                            <div>\n                                <div className=\"row justify-content-around\">\n                                    <div className=\"col-lg-3 \">\n                                        <div className=\" font-weight-bold my-2  text-center text-break align-self-strech my-title\" style={{\n\n\n                                        }}>Aroma{'\\u00A0'}Intensity</div>\n                                        <div className=\" mx-0 px-0\">\n                                            < RadarChart data={aromas} title={\"Aroma Intensity\"} suggestedMax={metaRecipe.aroma_max * 1.5} />\n                                        </div>\n                                        <div className=\"col-12  text-center\">\n                                            <img className=\"\" src={helper.aromaIndication(aromaScore)} style={{ height: \"13vh\", width: \"13vh\", }} alt='logo' />\n                                            <div className=\"d-flex justify-content-center\">\n                                                <p className={\"d-flex font-weight-bold px-2 my-1  my-title\"}>\n\n                                                    Aroma: {aromaScore}\n                                                </p>\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n                                    <div className=\"col-lg-3 text-center\">\n                                        <div className=\" font-weight-bold my-2  text-center  align-self-strech my-title\" >Taste{'\\u00A0'}Intensity</div>\n                                        <div className=\" mx-0 px-0\">\n                                            < RadarChart data={tastes} title={\"Taste Intensity\"} suggestedMax={metaRecipe.taste_max * 1.5}  />\n                                        </div>\n                                        <div className=\"col-12  text-center\">\n                                            <img className=\"\" src={helper.tasteIndication(tasteScore)} style={{ height: \"13vh\", width: \"13vh\", }} alt='logo' />\n                                            <div className=\"d-flex justify-content-center\">\n                                                <p className={\"d-flex font-weight-bold px-2 my-1 my-title \"}>\n\n                                                    Taste: {tasteScore}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-lg-5 \">\n                                        <div className=\" font-weight-bold my-2  text-center text-break align-self-strech my-title\">\n                                            Environmental Impact\n                                        </div>\n                                        <div className=\" mx-0 px-0\">\n                                            < LineChart\n                                                dynamicEnvImpact={envImpact}\n                                                envImpactAvg={envImpactAvgMetaReicpe}\n                                                suggestedMax = {metaRecipe.env_impact_max * 1.5}\n                                            />\n                                        </div>\n                                        <div className=\"col-12  align-self-end text-center mt-2\">\n                                            <img className=\"\" src={helper.sustaibleIndication(sustainableScore)} style={{ height: \"17vh\", width: \"12.5vh\", }} alt='logo' />\n                                            <div className=\"d-flex justify-content-center\">\n                                                <p className={\"d-flex font-weight-bold px-2 my-1 my-title \"}>\n\n                                                    Sustaible: {sustainableScore}\n                                                </p>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                :\n                <div className=\"d-flex justify-content-center\">\n                    <Spinner animation=\"border\" role=\"status\" >\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>}\n\n\n        </div >\n    );\n};"]},"metadata":{},"sourceType":"module"}
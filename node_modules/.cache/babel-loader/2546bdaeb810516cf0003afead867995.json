{"ast":null,"code":"var _jsxFileName = \"/Users/jeanaboutboul/Desktop/Metarecipe-local/src/components/LineChart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nfunction convertTitles(titlesArr) {\n  let newTitlesArr = [];\n\n  for (const title of titlesArr) {\n    if (title.startsWith(\"land_use\")) {\n      newTitlesArr = [...newTitlesArr, \"Land use\"];\n    } else if (title.startsWith(\"fresh\")) {\n      newTitlesArr = [...newTitlesArr, \"Freshwater(10L)\"];\n    } else {\n      newTitlesArr = [...newTitlesArr, title.replace(/^\\w/, c => c.toUpperCase())];\n    }\n  }\n\n  return newTitlesArr;\n}\n\nexport default function LineByData({\n  dynamicEnvImpact,\n  envImpactAvg,\n  suggestedMax\n}) {\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    const chart = () => {\n      let datasetLand = []; // save data set\n\n      datasetLand = [{\n        label: \"Dish Footprint\",\n        backgroundColor: '#f2b705',\n        // borderWidth: 4,\n        data: Object.values(dynamicEnvImpact)\n      }]; // save data set\n\n      datasetLand = [...datasetLand, {\n        label: \"Metarecipe Avarge\",\n        backgroundColor: '#2f1544',\n        // borderWidth: 4,\n        data: Object.values(envImpactAvg)\n      }]; // datasetLand = [ ...datasetLand , {\n      //     label: \"Ghg\",\n      //     backgroundColor: colors[3],\n      //     borderWidth: 4,\n      //     data: Object.values(props.ghg_avg)\n      // }];\n\n      setChartData({\n        labels: convertTitles(Object.keys(dynamicEnvImpact)),\n        datasets: datasetLand\n      });\n    };\n\n    chart();\n  }, [dynamicEnvImpact, envImpactAvg]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: chartData // width={60}\n    // height={20}   \n    ,\n    options: {\n      responsive: true,\n      aspectRatio: 3,\n      title: {\n        text: \"Environmental Impact\",\n        display: false\n      },\n      legend: {\n        position: 'bottom' // align: 'start'\n\n      },\n      scales: {\n        xAxes: [{\n          gridLines: {\n            color: '#2f1544',\n            lineWidth: 0.5\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            suggestedMax: suggestedMax,\n            min: 0\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/Users/jeanaboutboul/Desktop/Metarecipe-local/src/components/LineChart.js"],"names":["React","useState","useEffect","Bar","convertTitles","titlesArr","newTitlesArr","title","startsWith","replace","c","toUpperCase","LineByData","dynamicEnvImpact","envImpactAvg","suggestedMax","chartData","setChartData","chart","datasetLand","label","backgroundColor","data","Object","values","labels","keys","datasets","responsive","aspectRatio","text","display","legend","position","scales","xAxes","gridLines","color","lineWidth","yAxes","ticks","min"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAGA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAC9B,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAK,MAAMC,KAAX,IAAoBF,SAApB,EAA+B;AAC3B,QAAIE,KAAK,CAACC,UAAN,CAAiB,UAAjB,CAAJ,EAAkC;AAC9BF,MAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkB,UAAlB,CAAf;AACH,KAFD,MAEO,IAAIC,KAAK,CAACC,UAAN,CAAiB,OAAjB,CAAJ,EAA+B;AAClCF,MAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkB,iBAAlB,CAAf;AACH,KAFM,MAEA;AACHA,MAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBC,KAAK,CAACE,OAAN,CAAc,KAAd,EAAsBC,CAAD,IAAOA,CAAC,CAACC,WAAF,EAA5B,CAAlB,CAAf;AACH;AACJ;;AACD,SAAOL,YAAP;AACH;;AAED,eAAe,SAASM,UAAT,CAAoB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA,YAApB;AAAmCC,EAAAA;AAAnC,CAApB,EAAuE;AAElF,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,KAAK,GAAG,MAAM;AAEhB,UAAIC,WAAW,GAAG,EAAlB,CAFgB,CAGhB;;AACAA,MAAAA,WAAW,GAAG,CAAC;AACXC,QAAAA,KAAK,EAAE,gBADI;AAEXC,QAAAA,eAAe,EAAE,SAFN;AAGX;AACAC,QAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAcX,gBAAd;AAJK,OAAD,CAAd,CAJgB,CAYhB;;AACAM,MAAAA,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiB;AAC3BC,QAAAA,KAAK,EAAE,mBADoB;AAE3BC,QAAAA,eAAe,EAAE,SAFU;AAG3B;AACAC,QAAAA,IAAI,EAAEC,MAAM,CAACC,MAAP,CAAcV,YAAd;AAJqB,OAAjB,CAAd,CAbgB,CAqBhB;AACA;AACA;AACA;AACA;AACA;;AAEAG,MAAAA,YAAY,CAAC;AACTQ,QAAAA,MAAM,EAAErB,aAAa,CAACmB,MAAM,CAACG,IAAP,CAAYb,gBAAZ,CAAD,CADZ;AAETc,QAAAA,QAAQ,EAAER;AAFD,OAAD,CAAZ;AAIH,KAhCD;;AAmCAD,IAAAA,KAAK;AACR,GArCQ,EAqCN,CAACL,gBAAD,EAAoBC,YAApB,CArCM,CAAT;AAuCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AACI,IAAA,IAAI,EAAEE,SADV,CAEI;AACA;AAHJ;AAII,IAAA,OAAO,EAAE;AACLY,MAAAA,UAAU,EAAE,IADP;AAELC,MAAAA,WAAW,EAAE,CAFR;AAGLtB,MAAAA,KAAK,EAAE;AAAEuB,QAAAA,IAAI,EAAE,sBAAR;AAAgCC,QAAAA,OAAO,EAAE;AAAzC,OAHF;AAILC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,QADN,CAEJ;;AAFI,OAJH;AASLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,SAAS,EAAE;AACPC,YAAAA,KAAK,EAAE,SADA;AAEPC,YAAAA,SAAS,EAAE;AAFJ;AADP,SAAD,CADH;AAOJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACHzB,YAAAA,YAAY,EAAEA,YADX;AAEH0B,YAAAA,GAAG,EAAE;AAFF;AADH,SAAD;AAPH;AATH,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAkCH;AAAA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\n\nfunction convertTitles(titlesArr) {\n    let newTitlesArr = []\n    for (const title of titlesArr) {\n        if (title.startsWith(\"land_use\")) {\n            newTitlesArr = [...newTitlesArr, \"Land use\"];\n        } else if (title.startsWith(\"fresh\")) {\n            newTitlesArr = [...newTitlesArr, \"Freshwater(10L)\"];\n        } else {\n            newTitlesArr = [...newTitlesArr, title.replace(/^\\w/, (c) => c.toUpperCase())];\n        }\n    }\n    return newTitlesArr;\n}\n\nexport default function LineByData({ dynamicEnvImpact, envImpactAvg , suggestedMax }) {\n\n    const [chartData, setChartData] = useState({});\n\n    useEffect(() => {\n        const chart = () => {\n\n            let datasetLand = []\n            // save data set\n            datasetLand = [{\n                label: \"Dish Footprint\",\n                backgroundColor: '#f2b705',\n                // borderWidth: 4,\n                data: Object.values(dynamicEnvImpact)\n            }];\n\n\n            // save data set\n            datasetLand = [...datasetLand, {\n                label: \"Metarecipe Avarge\",\n                backgroundColor: '#2f1544',\n                // borderWidth: 4,\n                data: Object.values(envImpactAvg)\n            }];\n\n\n            // datasetLand = [ ...datasetLand , {\n            //     label: \"Ghg\",\n            //     backgroundColor: colors[3],\n            //     borderWidth: 4,\n            //     data: Object.values(props.ghg_avg)\n            // }];\n\n            setChartData({\n                labels: convertTitles(Object.keys(dynamicEnvImpact)),\n                datasets: datasetLand\n            });\n        }\n\n\n        chart();\n    }, [dynamicEnvImpact , envImpactAvg]);\n\n    return (\n        <div>\n            <Bar\n                data={chartData}\n                // width={60}\n                // height={20}   \n                options={{\n                    responsive: true,\n                    aspectRatio: 3,\n                    title: { text: \"Environmental Impact\", display: false },\n                    legend: {\n                        position: 'bottom',\n                        // align: 'start'\n\n                    },\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                color: '#2f1544',\n                                lineWidth: 0.5\n                            }\n                        }],\n                        yAxes: [{\n                            ticks: {\n                                suggestedMax: suggestedMax,\n                                min: 0\n                            }\n                        }],\n                    }\n\n                }}\n            />\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}